name: Reusable - Build and Push to GHCR

on:
  workflow_call:
    inputs:
      build_type:
        description: 'Type of build, influences tagging. Expected values: "dev", "main", "legacy", "release".'
        required: true
        type: string
      git_ref:
        description: "The full Git reference (e.g., refs/heads/main, refs/tags/v1.2.3). Used for version tagging on releases."
        required: true
        type: string
      add_sha_tag:
        description: "Whether to add a tag with the short commit SHA."
        required: false
        type: boolean
        default: true
      build_args:
        description: "Build arguments to pass to Docker build (e.g., MY_ARG=value)."
        required: false
        type: string
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
jobs:
  build-and-push-ghcr:
    name: Build and Push Docker Image to GHCR
    runs-on: ${{ inputs.runs_on }}
    permissions:
      contents: read # To checkout the repository
      packages: write # To push packages to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: "recursive"
          fetch-depth: 0 # Recommended for docker/metadata-action for full git history access

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # In reusable workflow, github.repository is the caller repo
          tags: |
            # Dev build tag
            type=raw,value=dev,enable=${{ inputs.build_type == 'dev' }}

            # Main branch build (staging tag)
            type=raw,value=stg,enable=${{ inputs.build_type == 'main' }}

            # Legacy build tag
            type=raw,value=legacy,enable=${{ inputs.build_type == 'legacy' }}

            # Release build tags
            type=raw,value=prod,enable=${{ inputs.build_type == 'release' }}
            type=raw,value=latest,enable=${{ inputs.build_type == 'release' }}
            # Version tag from git_ref (e.g., v1.0.0 from refs/tags/v1.0.0)
            # Ensure inputs.git_ref is a tag like refs/tags/v1.0.0 for this to work as expected.
            type=ref,event=tag,ref=${{ inputs.git_ref }},enable=${{ inputs.build_type == 'release' }}

            # SHA tag (short commit hash)
            type=sha,prefix=,enable=${{ inputs.add_sha_tag == true }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile # Assuming Dockerfile is at the root of the calling repo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build_args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
