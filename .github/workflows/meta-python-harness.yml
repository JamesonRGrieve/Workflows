name: Meta Test Python Workflow

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "Branch to compare against when rehearsing regressions"
        required: false
        default: "refs/heads/main"
      simulate_regression:
        description: "Also run a job that injects a failing test to exercise regression detection"
        required: false
        type: boolean
        default: true

jobs:
  python-baseline:
    name: Python reusable workflow (baseline)
    uses: ./.github/workflows/test-py-pytest.yml
    with:
      runs_on: ubuntu-latest
      python-version: "3.10"
      target_branch_to_compare: ${{ inputs.target_branch }}
      project_path: meta_testing/projects/python/sample_app

  python-regression:
    if: ${{ inputs.simulate_regression }}
    needs: python-baseline
    name: Python reusable workflow (forced regression)
    uses: ./.github/workflows/test-py-pytest.yml
    with:
      runs_on: ubuntu-latest
      python-version: "3.10"
      target_branch_to_compare: ${{ inputs.target_branch }}
      project_path: meta_testing/projects/python/sample_app
      pre_run_commands: >-
        python ../../../scripts/python/introduce_failure.py tests/test_arithmetic.py

  analyze-python-regression:
    if: ${{ inputs.simulate_regression }}
    needs: python-regression
    name: Meta regression analysis (Python)
    uses: ./.github/workflows/meta-regression-analysis.yml
    with:
      runs_on: ubuntu-latest
      run_id: ${{ github.run_id }}
      target_branch_artifact_name: ${{ format('target_branch_data_{0}', github.run_id) }}
      pr_branch_artifact_name: ${{ format('pr_branch_data_{0}', github.run_id) }}
      item_type_singular: test
      item_type_plural: tests
